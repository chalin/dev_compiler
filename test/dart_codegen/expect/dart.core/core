library dart.core;

import 'dart:collection' as DDC$dartDOTcollection$;
import 'package:ddc/runtime/dart_logging_runtime.dart' as DDC$RT;
import "dart:collection";
import "dart:_internal" hide Symbol;
import "dart:_internal" as internal show Symbol;
import "dart:convert" show UTF8, LATIN1, Encoding;
import "dart:math" show Random;
import "dart:_internal" as _symbol_dev;
part "annotations.dart";
part "bool.dart";
part "comparable.dart";
part "date_time.dart";
part "double.dart";
part "duration.dart";
part "errors.dart";
part "exceptions.dart";
part "expando.dart";
part "function.dart";
part "identical.dart";
part "int.dart";
part "invocation.dart";
part "iterable.dart";
part "iterator.dart";
part "list.dart";
part "map.dart";
part "null.dart";
part "num.dart";
part "object.dart";
part "pattern.dart";
part "print.dart";
part "regexp.dart";
part "set.dart";
part "sink.dart";
part "stacktrace.dart";
part "stopwatch.dart";
part "string.dart";
part "string_buffer.dart";
part "string_sink.dart";
part "symbol.dart";
part "type.dart";
part "uri.dart";

class _ListConstructorSentinel extends JSInt {
  const _ListConstructorSentinel();
}
_symbolMapToStringMap(Map<Symbol, dynamic> map) {
  if (map == null) return null;
  var result = new Map<String, dynamic>();
  map.forEach((Symbol key, value) {
    result[_symbolToString(key)] = value;
  });
  return result;
}
String _symbolToString(Symbol symbol) => _symbol_dev.Symbol.getName(DDC$RT.cast(
    symbol, Symbol, Symbol, "CastGeneral",
    """line 207, column 69 of dart:core: """, symbol is Symbol, true));
